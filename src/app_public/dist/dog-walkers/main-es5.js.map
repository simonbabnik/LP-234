{"version":3,"sources":["webpack:///src/app/services/dog.service.ts","webpack:///src/app/classes/shramba.ts","webpack:///src/app/services/authorization.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/classes/pes.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/pipes/stars.pipe.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/toolbar/toolbar.component.ts","webpack:///src/app/components/toolbar/toolbar.component.html","webpack:///src/app/components/modal-confirm/modal-confirm.component.ts","webpack:///src/app/components/modal-confirm/modal-confirm.component.html","webpack:///src/app/components/verify/verify.component.html","webpack:///src/app/components/verify/verify.component.ts","webpack:///src/app/components/add-dog/add-dog.component.ts","webpack:///src/app/components/add-dog/add-dog.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/services/uporabniki.service.ts","webpack:///src/app/components/messages/messages.component.ts","webpack:///src/app/components/messages/messages.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["DogService","http","dogApi","dogApiKey","breed","get","headers","toPromise","then","result","providedIn","SHRAMBA_BRSKALNIKA","factory","localStorage","AuthorizationService","shramba","apiUrl","niz","decodeURIComponent","Array","prototype","map","call","atob","znak","charCodeAt","toString","slice","join","token","getToken","koristnaVsebina","JSON","parse","b64Utf8","split","exp","Date","now","urlAddress","data","url","post","rezultat","handleError","getItem","setItem","email","password","console","log","authentication","geslo","authResult","saveToken","removeItem","registrationData","rezultatAvtentikacije","napaka","error","errmsg","message","Promise","reject","Storage","environment","production","HomeComponent","posts","_id","_id_uporabnik","naziv","kraj","cena","opis","ratings","userID","rating","selector","templateUrl","styleUrls","ProfileComponent","dogService","authorizationService","router","uporabnikService","showAddDog","breedData","usefulInfo","bred_for","breed_group","height","imperial","metric","life_span","name","reference_image_id","temperament","weight","newDog","jePrijavljen","navigate","id","getId","getUser","uporabnik","getBreedInfo","popup","document","getElementById","classList","toggle","add","Pes","slika","ime","pasma","ocene","povprecnaOcena","DashboardComponent","uporabnikiService","users","getAllUsers","startEdit","StarsPipe","ocena","zvezdice","i","AppComponent","title","LoginComponent","authService","alert","hidden","type","loginForm","undefined","required","showAlert","valid","value","pass","login","sporocilo","onSubmit","RegisterComponent","registerForm","firstName","surname","passwordConfirm","birthday","documentID","profilePicture","role","pass1","pass2","passwordMatch","registerData","priimek","datumRojstva","slika_dokumenta","slika_profila","tip_racuna","registration","AppModule","declarations","imports","providers","bootstrap","ToolbarComponent","jeAdmin","jeVerifier","logout","ModalConfirmComponent","modal","fromParent","form","input","close","buttonName","passBack","VerifyComponent","modalService","statusPending","statusDenied","statusVerified","slikaProfila","slikaDokumenta","tipRacuna","status","buttonValues","length","buttonValue","push","verify","event","target","blur","openModal","find","user","filter","item","updatedStatus","src","modalImg","style","display","mode","modalRef","open","userButtonvalue","action","extraInfo","permanent","componentInstance","updateItem","closeImageModal","AddDogComponent","dogForm","description","picture","breeds","getAllBreeds","routes","path","component","AppRoutingModule","forRoot","exports","UporabnikiService","uporabnikiApi","MessagesComponent","bootstrapModule","err","webpackEmptyAsyncContext","req","resolve","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { DogApiResult } from '../classes/dog-api-result';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DogService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  dogApi: string = \"https://api.thedogapi.com/v1/breeds/\";\r\n  dogApiKey: string = \"1f9c183c-4503-4b3f-8d0f-785695091ea1\";\r\n\r\n  getBreedInfo(breed: string) {\r\n    return this.http\r\n    .get(this.dogApi + \"search?q=\" + breed, {\r\n      headers: new HttpHeaders({\r\n        'x-api-key': '${this.dogApiKey}'\r\n      })\r\n    })\r\n    .toPromise()\r\n    .then(result => result as Array<DogApiResult>)\r\n  }\r\n\r\n  getAllBreeds() {\r\n    return this.http\r\n    .get(this.dogApi)\r\n    .toPromise()\r\n    .then(result => result as Array<DogApiResult>)\r\n  }\r\n\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const SHRAMBA_BRSKALNIKA = new InjectionToken<Storage>(\r\n  'Shramba brskalnika',\r\n  {\r\n    providedIn: 'root',\r\n    factory: () => localStorage\r\n  }\r\n);\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthApiResult } from '../classes/auth-api-result';\r\nimport { SHRAMBA_BRSKALNIKA } from '../classes/shramba';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizationService {\r\n\r\n  private apiUrl = environment.apiUrl;\r\n\r\n  constructor(\r\n    private readonly http: HttpClient,\r\n    @Inject(SHRAMBA_BRSKALNIKA) private shramba: Storage\r\n  ) { }\r\n\r\n  private b64Utf8(niz: string): string {\r\n    return decodeURIComponent(\r\n      Array.prototype.map\r\n        .call(\r\n          atob(niz),\r\n          (znak: string) => {\r\n            return '%' + ('00' + znak.charCodeAt(0).toString(16)).slice(-2);\r\n          }\r\n        )\r\n        .join('')\r\n    );\r\n  }\r\n\r\n  public jePrijavljen(): boolean {\r\n    const token: string = this.getToken();\r\n    if (token) {\r\n      const koristnaVsebina = JSON.parse(this.b64Utf8(token.split('.')[1]));\r\n      return koristnaVsebina.exp > (Date.now() / 1000);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private authentication(urlAddress: string, data: any): Promise<AuthApiResult> {\r\n    const url = `${this.apiUrl}/${urlAddress}`;\r\n    return this.http\r\n      .post(url, data)\r\n      .toPromise()\r\n      .then(rezultat => rezultat as AuthApiResult)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public getId(): string {\r\n    const token: string = this.getToken();\r\n    if (token) {\r\n      return  JSON.parse(this.b64Utf8(token.split('.')[1]));\r\n    } else {\r\n      return \"false\";\r\n    }\r\n  }\r\n\r\n  public getToken(): string {\r\n    return this.shramba.getItem('dog-walkers-token') as string;\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    this.shramba.setItem('dog-walkers-token', token);\r\n  }\r\n\r\n  public login(email: string, password: string): Promise<any> {\r\n    console.log('In login:)');\r\n\r\n    return this.authentication('prijava', {email: email, geslo: password})\r\n      .then((authResult: any) => {\r\n        console.log(authResult);\r\n        this.saveToken(authResult['žeton']);\r\n    });\r\n  }\r\n\r\n  public logout(): void {\r\n    this.shramba.removeItem('dog-walkers-token');\r\n  }\r\n\r\n  public async registration(registrationData: any): Promise<any> {\r\n    return this.authentication('registracija', registrationData)\r\n      .then((rezultatAvtentikacije: any) => {\r\n        this.saveToken(rezultatAvtentikacije[\"žeton\"]);\r\n      });\r\n  }\r\n\r\n  private handleError(napaka: any): Promise<any> {\r\n    console.error('Prišlo je do napake', napaka.error[\"sporočilo\"] || napaka.error.errmsg || napaka.message || napaka);\r\n    return Promise.reject(napaka.error[\"sporočilo\"] || napaka.error.errmsg || napaka.message || napaka);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  apiUrl: 'http://localhost:3000/api',\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Oglas } from \"../../classes/oglas\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  posts: Oglas[];\r\n  ratings: {userID: string, rating: number}[];\r\n\r\n  constructor() {\r\n    this.posts = [{\r\n      _id: '',\r\n      _id_uporabnik: '',\r\n      naziv: 'First post',\r\n      kraj: 'Ljubljana',\r\n      cena: 100,\r\n      opis: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\r\n    }, {\r\n      _id: '',\r\n      _id_uporabnik: '',\r\n      naziv: 'Second post',\r\n      kraj: 'Maribor',\r\n      cena: 10000,\r\n      opis: 'Text.',\r\n    }];\r\n    this.ratings = [{\r\n      userID: '',\r\n      rating: 3.6\r\n    },\r\n      {\r\n        userID: '',\r\n        rating: 0\r\n      }]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container col-md-6\">\r\n  <div class=\"special-center\">\r\n    <h1>Home</h1>\r\n    <button type=\"button\" class=\"btn btn-sm button-green\" title=\"Edit post\"><img class=\"icon\" src=\"../../../assets/img/plus.jpg\" alt=\"add post\"> Add post</button>\r\n  </div>\r\n\r\n  <!-- Sorting -->\r\n  <div class=\"text-h5 mb-3\">Sorting options</div>\r\n  <div class=\"list-group\">\r\n    <button type=\"button\" class=\"list-group-item list-group-item-action\" aria-current=\"true\">\r\n      Sort by best-rated dog walkers\r\n    </button>\r\n    <div class=\"list-group-item \">\r\n      <div class=\"row justify-content-between align-items-center\">\r\n        <div class=\"col d-flex\">Filter by location:</div>\r\n        <div class=\"col\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Location\" aria-label=\"Location\" aria-describedby=\"location\">\r\n        </div>\r\n        <div class=\"d-flex col justify-content-end\">\r\n          <button type=\"button\" class=\"btn btn-sm button-color-accent\">Apply</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <hr class=\"m-5\">\r\n\r\n  <!-- Posts -->\r\n  <div class=\"card mb-3\" *ngFor=\"let post of posts; let i = index\">\r\n    <h5 class=\"card-header d-flex justify-content-between align-items-center\">\r\n      <!-- Stars -->\r\n      <div [innerHtml] = \"ratings[i].rating | stars\"></div>\r\n\r\n      <div>\r\n        <button type=\"button\" class=\"btn btn-sm btn-warning\" title=\"Edit post\"><img class=\"icon\" src=\"../../../assets/img/edit.png\" alt=\"edit post\"></button>\r\n        <button type=\"button\" class=\"btn btn-sm btn-danger m-left\" title=\"Delete post\"><img class=\"icon\" src=\"../../../assets/img/delete.png\" alt=\"delete post\"></button>\r\n      </div>\r\n    </h5>\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id=\"location\">Location</span>\r\n            </div>\r\n            <p class=\"form-control\">{{post.kraj}}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id=\"price\">Price (€)</span>\r\n            </div>\r\n            <p class=\"form-control\">{{post.cena}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h5 class=\"card-title\">{{post.naziv}}</h5>\r\n      <p class=\"card-text\">{{(post.opis.length>300)? (post.opis | slice:0:300)+'...':(post.opis)}}</p>\r\n      <a href=\"#\" class=\"btn btn-sm button-color-accent\">More</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Uporabnik } from '../../classes/uporabnik';\r\nimport { Pes } from '../../classes/pes';\r\nimport { DogService } from '../../services/dog.service';\r\nimport { DogApiResult } from 'src/app/classes/dog-api-result';\r\nimport { AuthorizationService } from 'src/app/services/authorization.service';\r\nimport { Router } from '@angular/router';\r\nimport { UporabnikiService } from 'src/app/services/uporabniki.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  id: string;\r\n  uporabnik: Uporabnik;\r\n  showAddDog: boolean = false;\r\n  breedData = {};\r\n  usefulInfo: Array<DogApiResult> = [{\r\n    bred_for: \"Fetching data...\",\r\n    breed_group: \"Fetching data...\",\r\n    height: {\r\n      imperial: \"Fetching data...\",\r\n      metric: \"Fetching data...\"\r\n    },\r\n    _id: -1,\r\n    life_span: \"Fetching data...\",\r\n    name: \"Fetching data...\",\r\n    reference_image_id: \"Fetching data...\",\r\n    temperament: \"Fetching data...\",\r\n    weight: {\r\n      imperial: \"Fetching data...\",\r\n      metric: \"Fetching data...\"\r\n    }\r\n  }];\r\n\r\n  newDog: Pes = new Pes();\r\n\r\n  constructor(private dogService: DogService,\r\n              private authorizationService: AuthorizationService,\r\n              private router: Router,\r\n              private uporabnikService: UporabnikiService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n      if(!this.authorizationService.jePrijavljen()) {\r\n        this.router.navigate(['login']);\r\n      }\r\n      this.id = this.authorizationService.getId()[\"_id\"];\r\n      this.uporabnikService.getUser(this.id).then((result) => {\r\n        this.uporabnik = result;\r\n      });\r\n  }\r\n\r\n  startEdit() {\r\n    console.log(\"start editing\")\r\n  }\r\n\r\n  breedInfo(breed: string) {\r\n    this.usefulInfo = [{\r\n      bred_for: \"Fetching data...\",\r\n      breed_group: \"Fetching data...\",\r\n      height: {\r\n        imperial: \"Fetching data...\",\r\n        metric: \"Fetching data...\"\r\n      },\r\n      _id: -1,\r\n      life_span: \"Fetching data...\",\r\n      name: \"Fetching data...\",\r\n      reference_image_id: \"Fetching data...\",\r\n      temperament: \"Fetching data...\",\r\n      weight: {\r\n        imperial: \"Fetching data...\",\r\n        metric: \"Fetching data...\"\r\n      }\r\n    }];\r\n    this.breedData = this.dogService.getBreedInfo(breed).then((result) => {\r\n      this.usefulInfo = result;\r\n    });\r\n    var popup = document.getElementById(\"myPopup\");\r\n    popup?.classList.toggle(\"show\");\r\n  }\r\n\r\n  toggleAddDog() {\r\n   document.getElementById(\"dogForm\")?.classList.add(\"visible\");\r\n  }\r\n}\r\n","<div class=\"profile-container\" *ngIf=\"uporabnik\">\r\n  <img src=\"../../../assets/img/person.jpg\" alt=\"Slika profila\" class=\"image-container\">\r\n  <p class=\"profile-type\"><b>{{ uporabnik.tipRacuna }}</b></p>\r\n  <hr>\r\n  <div class=\"edit-icon-container\" (click)=\"startEdit()\"  id=\"edit_profil\">\r\n    <img class=\"edit-icon\" src=\"../../../assets/img/edit.png\" alt=\"edit profil\" >\r\n  </div>\r\n  <br>\r\n  <p class=\"profile-info\"><b>Name:</b> {{ uporabnik.ime }} </p>\r\n  <p class=\"profile-info\"><b>Surname:</b> {{ uporabnik.priimek }} </p>\r\n  <p class=\"profile-info\"><b>Birth date:</b> {{ uporabnik.datumRojstva | date }} </p>\r\n  <p class=\"profile-info\"><b>Description:</b></p>\r\n  <div class=\"profile-description\">\r\n    {{ uporabnik.opis }}\r\n  </div>\r\n  <hr>\r\n  <div class=\"edit-icon-container\" style=\"margin-bottom: 10px; height: 24px;\" (click)=\"startEdit()\" id=\"edit_dog\">\r\n    <img class=\"edit-icon\" src=\"../../../assets/img/edit.png\" alt=\"edit dog\" >\r\n  </div>\r\n<!--   <div *ngFor=\"let pes of uporabnik.psi\" class=\"dog-card\">\r\n    <div class=\"container\">\r\n      <div class=\"images\">\r\n        <img src=\"../../../assets/img/{{ pes.slika }}\" />\r\n      </div>\r\n      <div class=\"data\">\r\n        <p class=\"profile-info\"><b>Name:</b> {{ pes.ime }} </p>\r\n        <p class=\"profile-info popup\"><b>Breed: </b> <i class=\"dotted\" (click)=\"breedInfo(pes.pasma)\">{{ pes.pasma }}</i>\r\n          <span class=\"popuptext\" id=\"myPopup\">\r\n            <p *ngIf=\"usefulInfo[0].name\"><b>Name:</b> {{usefulInfo[0].name}}</p>\r\n            <p *ngIf=\"usefulInfo[0].bred_for\"><b>Bred for:</b> {{usefulInfo[0].bred_for}}</p>\r\n            <p *ngIf=\"usefulInfo[0].temperament\"><b>Temperament:</b> {{usefulInfo[0].temperament}}</p>\r\n            <p *ngIf=\"usefulInfo[0].life_span\"><b>Lifespan:</b> {{usefulInfo[0].life_span}}</p>\r\n            <p *ngIf=\"usefulInfo[0].weight.metric\"><b>Weight:</b> {{ usefulInfo[0].weight.metric }} kg</p>\r\n            <p *ngIf=\"usefulInfo[0].height.metric\"><b>Height:</b> {{ usefulInfo[0].height.metric }} cm</p>\r\n          </span>\r\n        </p>\r\n        <p class=\"profile-info\"><b>Description:</b></p>\r\n        <div class=\"dog-description\">\r\n          {{ pes.opis }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div style=\"height: 20px;\"></div>\r\n  </div> -->\r\n  <div routerLink=\"/add_dog\" class=\"container\" (click)=\"toggleAddDog()\" id=\"add_dog\">\r\n    <img src=\"../../../assets/img/plus.jpg\" class=\"plus\">\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Ocena } from \"./ocena\";\r\n\r\nexport class Pes {\r\n  _id: string = \"\";\r\n  opis: string = \"\";\r\n  slika: string = \"\";\r\n  ime: string = \"\";\r\n  pasma: string = \"\";\r\n  ocene: Array<Ocena> = [];\r\n  povprecnaOcena: number = 0;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Uporabnik } from 'src/app/classes/uporabnik';\r\nimport { UporabnikiService } from 'src/app/services/uporabniki.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  users: Array<Uporabnik> = [];\r\n\r\n\r\n  constructor(private uporabnikiService: UporabnikiService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.uporabnikiService.getAllUsers().then((result) => {\r\n      this.users = result[\"uporabniki\"];\r\n    }\r\n    )\r\n  }\r\n\r\n  startEdit() {\r\n  }\r\n\r\n  deleteUser() {\r\n\r\n  }\r\n\r\n}\r\n","<h1 (click)=\"startEdit()\">Admin dashboard</h1>\r\n\r\n<div class=\"container\" *ngFor=\"let user of users\">\r\n  <div class=\"edit-delete\">\r\n    <img class=\"edit-icon\" src=\"../../../assets/img/edit.png\" alt=\"edit profil\" (click)=\"startEdit()\">\r\n    <img class=\"edit-icon\" src=\"../../../assets/img/delete.png\" alt=\"edit profil\" (click)=\"deleteUser()\">\r\n  </div>\r\n  <hr>\r\n  <div class=\"data-fields\">\r\n    <!-- <img src=\"../../../assets/img/{{ user.slikaProfila }}\" class=\"profile-image\"> -->\r\n    <div class=\"user-data\">\r\n      <h2 style=\"text-align: center; font-size: 34px;\">{{ user.ime }} {{ user.priimek }}</h2>\r\n      <p class=\"h1\" style=\"font-size: 24px;\">{{ user.datumRojstva | date}}</p>\r\n      <p class=\"h1\" style=\"font-size: 24px;\"><b>Description:</b></p>\r\n      <div class=\"profile-description\">\r\n        {{ user.opis }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'stars'\r\n})\r\nexport class StarsPipe implements PipeTransform {\r\n\r\n  transform(ocena: number): string {\r\n    let zvezdice = '';\r\n    for (let i = 1; i <= 5; i++)\r\n      zvezdice += '<i class=\"fa' + (ocena >= i ? 's' : 'r') + ' fa-star\"></i>';\r\n    return zvezdice;\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'dog-walkers';\r\n}","<app-toolbar></app-toolbar>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthorizationService } from '../../services/authorization.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  alert = {\r\n    hidden: true,\r\n    type: 'danger',\r\n    message: 'Something went wrong!'\r\n  };\r\n\r\n  public loginForm: FormGroup = new FormGroup({\r\n    email: new FormControl(undefined, [Validators.required, Validators.email]),\r\n    password: new FormControl(undefined, [Validators.required]),\r\n  });\r\n\r\n  constructor(\r\n    private readonly authService: AuthorizationService,\r\n    private readonly router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.loginForm.valid) {\r\n      // Null checks\r\n      const email = this.loginForm.get('email')?.value;\r\n      const pass = this.loginForm.get('password')?.value;\r\n      if (email !== undefined && pass !== undefined) {\r\n        this.authService.login(\r\n          this.loginForm.get('email')?.value,\r\n          this.loginForm.get('password')?.value)\r\n          .then(() => {\r\n            this.router.navigate(['/profile']);\r\n          })\r\n          .catch(sporocilo => this.handleError(sporocilo));\r\n      }\r\n    }\r\n    else {\r\n      console.log('Login data are not valid.');\r\n    }\r\n  }\r\n\r\n  private readonly handleError = (error: any) => {\r\n    console.log(error);\r\n    this.showAlert(error);\r\n  }\r\n\r\n  /* Alerts */\r\n\r\n  // Set and show alert\r\n  showAlert(message: string): void {\r\n    this.alert.message = message;\r\n    this.alert.hidden = false;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <!--Login-->\r\n  <div class=\"login-container mt-5 mb-5\">\r\n\r\n    <!--Alert-->\r\n    <div class=\"row justify-content-center mt-3\">\r\n      <ngb-alert *ngIf=\"!alert.hidden\" [type]=\"alert.type\" (closed)=\"alert.hidden = true\" class=\"w-75\">{{ alert.message }}</ngb-alert>\r\n    </div>\r\n\r\n    <h1 class=\"mt-3 m-bottom-5 \">Login</h1>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n      <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" formControlName=\"email\" required>\r\n      <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" formControlName=\"password\" required>\r\n      <button type=\"submit\" class=\"button-color-accent m-top-5\" [disabled]=\"!loginForm.valid\">Login</button>\r\n      <p>OR</p>\r\n      <button class=\"button-color-accent m-bottom-5\" routerLink=\"/register\">Register</button>\r\n    </form>\r\n  </div>\r\n\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthorizationService } from '../../services/authorization.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  alert = {\r\n    hidden: true,\r\n    type: 'danger',\r\n    message: 'Nekaj je šlo narobe :('\r\n  };\r\n\r\n  public registerForm: FormGroup = new FormGroup({\r\n    firstName: new FormControl(undefined, [Validators.required]),\r\n    surname: new FormControl(undefined, [Validators.required]),\r\n    email: new FormControl(undefined, [Validators.required, Validators.email]),\r\n    password: new FormControl(undefined, [Validators.required]),\r\n    passwordConfirm: new FormControl(undefined, [Validators.required]),\r\n    birthday: new FormControl(undefined, [Validators.required]),\r\n    documentID: new FormControl(undefined, [Validators.required]),\r\n    profilePicture: new FormControl(undefined),\r\n    role: new FormControl(undefined)\r\n  });\r\n\r\n  constructor(\r\n    private readonly authService: AuthorizationService,\r\n    private readonly router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  passwordMatch(pass1: string, pass2: string): boolean {\r\n    if (pass1 && pass2 && pass1 === pass2) { return true; }\r\n    else { return false; }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    // tslint:disable-next-line:max-line-length\r\n    if (this.registerForm.valid) {\r\n      if (this.passwordMatch(this.registerForm.get('password')?.value, this.registerForm.get('passwordConfirm')?.value)) {\r\n        console.log('valid registration form');\r\n        // Role\r\n        let role = 'lastnik';\r\n        if (this.registerForm.get('role')?.value === true) {\r\n          role = 'sprehajalec';\r\n        }\r\n        const registerData = {\r\n          ime: this.registerForm.get('firstName')?.value,\r\n          priimek: this.registerForm.get('surname')?.value,\r\n          email: this.registerForm.get('email')?.value,\r\n          geslo: this.registerForm.get('password')?.value,\r\n          datumRojstva: this.registerForm.get('birthday')?.value,\r\n          slika_dokumenta: this.registerForm.get('documentID')?.value,\r\n          slika_profila: this.registerForm.get('profilePicture')?.value,\r\n          tip_racuna: role\r\n        };\r\n        this.authService.registration(registerData)\r\n          .then(() => {\r\n            this.router.navigate(['/profile']);\r\n          })\r\n          .catch(sporocilo => this.handleError(sporocilo));\r\n      }\r\n      else {\r\n        this.showAlert('Vneseni gesli se ne ujemata.');\r\n      }\r\n    }\r\n\r\n    /*// preveri geslo\r\n    const form = new FormData();\r\n    form.append('ime', this.registerForm.get('firstName').value);\r\n    form.append('priimek', this.registerForm.get('surname').value);\r\n    form.append('email', this.registerForm.get('email').value);\r\n    form.append('geslo', this.registerForm.get('password').value);\r\n    form.append('birthday', this.registerForm.get('birthday').value); // spremeni\r\n    form.append('slika_dokumenta', this.registerForm.get('documentID').value);\r\n    form.append('slika_profila', this.registerForm.get('profilePicture').value);\r\n    form.append('tip_racuna', this.registerForm.get('role').value);\r\n    console.log(form);*/\r\n  }\r\n\r\n  private readonly handleError = (error: any) => {\r\n    console.log(error);\r\n    this.showAlert(error);\r\n  }\r\n\r\n  /* Alerts */\r\n\r\n  // Set and show alert\r\n  showAlert(message: string): void {\r\n    this.alert.message = message;\r\n    this.alert.hidden = false;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <!--Register form-->\r\n  <div class=\"register-container mt-5 mb-5\">\r\n\r\n    <!--Alert-->\r\n    <div class=\"row justify-content-center mt-3\">\r\n      <ngb-alert *ngIf=\"!alert.hidden\" [type]=\"alert.type\" (closed)=\"alert.hidden = true\" class=\"w-75\">{{ alert.message }}</ngb-alert>\r\n    </div>\r\n\r\n    <h1 class=\"mt-3 m-bottom-5\">Register</h1>\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n      <input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First name\" formControlName=\"firstName\">\r\n      <input type=\"text\" id=\"surname\" name=\"surname\" placeholder=\"Last name\" formControlName=\"surname\">\r\n      <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n      <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n      <input type=\"password\" id=\"password_confirm\" name=\"password_confirm\" placeholder=\"Confirm password\" formControlName=\"passwordConfirm\">\r\n      <div class=\"input-inline\">\r\n        <label for=\"birthday\">Date of birth</label>\r\n        <input type=\"date\" id=\"birthday\" name=\"birthday\" class=\"field-inline\" formControlName=\"birthday\">\r\n      </div>\r\n      <div class=\"input-inline\">\r\n        <label for=\"documentID\">Upload ID</label>\r\n        <input type=\"file\" id=\"documentID\" name=\"documentID\" class=\"field-inline\" formControlName=\"documentID\">\r\n      </div>\r\n      <div class=\"input-inline\">\r\n        <label for=\"profile\">Upload profile picture</label>\r\n        <input type=\"file\" id=\"profile\" name=\"profile_picture\" class=\"field-inline\" formControlName=\"profilePicture\">\r\n      </div>\r\n      <div class=\"input-inline-left\">\r\n        <input type=\"checkbox\" id=\"is_dog_walker\" name=\"is_dog_walker\" formControlName=\"role\">\r\n        <label for=\"is_dog_walker\">I am a dog walker.</label>\r\n      </div>\r\n      <button type=\"submit\" class=\"button-color-accent m-top-5 m-bottom-5\" [disabled]=\"!registerForm.valid\">Register</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { MessagesComponent } from './components/messages/messages.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { VerifyComponent } from './components/verify/verify.component';\r\nimport { StarsPipe } from './pipes/stars.pipe';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { AddDogComponent } from './components/add-dog/add-dog.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ModalConfirmComponent } from './components/modal-confirm/modal-confirm.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ToolbarComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    MessagesComponent,\r\n    DashboardComponent,\r\n    VerifyComponent,\r\n    StarsPipe,\r\n    LoginComponent,\r\n    AddDogComponent,\r\n    RegisterComponent,\r\n    ModalConfirmComponent,\r\n  ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        ReactiveFormsModule,\r\n        NgbModule,\r\n        FormsModule,\r\n    ],\r\n  providers: [\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AuthorizationService } from 'src/app/services/authorization.service';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  constructor(private authorizationService: AuthorizationService) { }\r\n\r\n  jeAdmin: boolean = true;\r\n  jeVerifier: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout() {\r\n    this.authorizationService.logout();\r\n  }\r\n\r\n}\r\n","<div class=\"toolbar-main-div\">\r\n  <a routerLink=\"\">\r\n    Home\r\n  </a>\r\n  <a routerLink=\"profile\">\r\n    Profile\r\n  </a>\r\n  <a routerLink=\"messages\">\r\n    Messages\r\n  </a>\r\n  <a *ngIf=\"jeAdmin\" routerLink=\"admin\">\r\n    Dashboard\r\n  </a>\r\n  <a *ngIf=\"jeAdmin || jeVerifier\" routerLink=\"verify\">\r\n    Verify\r\n  </a>\r\n  <a routerLink=\"/\" class=\"logout\" (click)=\"logout()\">\r\n    Logout\r\n  </a>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Component({\r\n  selector: 'app-modal-confirm',\r\n  templateUrl: './modal-confirm.component.html',\r\n  styleUrls: ['./modal-confirm.component.css']\r\n})\r\nexport class ModalConfirmComponent implements OnInit {\r\n\r\n  @Input() fromParent: any;\r\n\r\n  constructor(public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  passBack() {\r\n    if(this.fromParent.form) {\r\n      let input = document.getElementById('textArea') as HTMLTextAreaElement;\r\n      this.modal.close(input?.value);\r\n    }\r\n    else {\r\n      this.modal.close(this.fromParent.buttonName);\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title \" id=\"modal-title\">{{fromParent.title}}</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <p><strong>Are you sure you want to{{fromParent.action}}<span class=\"text-warning\">{{fromParent.extraInfo}}</span>?</strong></p>\r\n  <p *ngIf=\"fromParent.permanent\" class=\"text-danger\">This operation can not be undone.</p>\r\n  <div *ngIf=\"fromParent.form\" class=\"form-group\">\r\n    <label for=\"textArea\">Please provide the reason.</label>\r\n    <textarea class=\"form-control\" id=\"textArea\" rows=\"3\"></textarea>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('Cancel')\">Cancel</button>\r\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"passBack()\">{{fromParent.buttonName}}</button>\r\n</div>\r\n","<h1>Verification of users</h1>\r\n\r\n<div *ngFor=\"let user of users;let i = index;\" class=\"verify-container mt-5 mb-5\">\r\n\r\n  <div class=\"row\" style=\"margin-left: 0; margin-right: 0\">\r\n\r\n    <!-- Profile data -->\r\n    <div class=\"profile-data-container p-2 col-md-8\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <div id=\"profile-data-left\">\r\n            <img *ngIf=\"user.slikaProfila; else elseProfilePicture\" src=\"{{user.slikaProfila}}\" alt=\"Profile picture\" class=\"img-style\">\r\n            <ng-template #elseProfilePicture><img src=\"../../../assets/img/default/no-profile-picture.jpg\" alt=\"Profile picture\" class=\"img-style\"></ng-template>\r\n            <a routerLink=\"../profile/{{user._id}}\" target=\"_blank\">View profile</a>\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div id=\"profile-data-right\" class=\"ml-2\">\r\n            <h2>{{user.ime}} {{user.priimek}}</h2>\r\n            <hr>\r\n            <p class=\"section-text\">Date of birth: </p>\r\n            <p>{{user.datumRojstva | date}}</p>\r\n            <p class=\"section-text\">Role:</p>\r\n            <p>{{user.tipRacuna}}</p>\r\n            <p class=\"section-text\">Email:</p>\r\n            <p>{{user.email}}</p>\r\n            <p *ngIf=\"user.opis\" class=\"section-text\">Description:</p>\r\n            <p *ngIf=\"user.opis\">{{user.opis}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Verification -->\r\n    <div class=\"verify-data-container p-2 col\">\r\n      <img *ngIf=\"user.slikaDokumenta; else elseDocument\" class=\"img-style img-doc\" src=\"{{user.slikaDokumenta}}\" alt=\"Document\" (click)=\"showImage(user.slikaDokumenta)\">\r\n      <ng-template #elseDocument><img class=\"img-style img-doc\" src=\"../../../assets/img/default/no-document-id-blue.png\" alt=\"Document\" (click)=\"showImage('../../../assets/img/default/no-document-id-blue.png')\"></ng-template>\r\n      <p class=\"verify-text\">Verify user</p>\r\n      <p class=\"verify-text-id\">{{user._id}}</p>\r\n      <p class=\"verify-text-id\"><b>Status:</b> {{user.status}}</p>\r\n\r\n      <!-- Buttons -->\r\n      <div class=\"d-flex justify-content-center\">\r\n\r\n        <div class=\"btn-group btn-group-toggle\" ngbRadioGroup name=\"radioBasic\" [(ngModel)]=\"buttonValues[i].buttonValue\">\r\n          <label ngbButtonLabel class=\"button-verify button-yes\">\r\n            <input ngbButton type=\"radio\" value=\"{{statusVerified}}\" (click)=\"verify('yes', user._id, $event)\"> YES\r\n          </label>\r\n          <label ngbButtonLabel class=\"button-verify button-no\">\r\n            <input ngbButton type=\"radio\" value=\"{{statusDenied}}\" (click)=\"verify('no', user._id, $event)\"> NO\r\n          </label>\r\n        </div>\r\n\r\n        <hr>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n<!-- Show image -->\r\n<div id=\"myModal\" class=\"modal\">\r\n  <span class=\"close\" (click)=\"closeImageModal()\">&times;</span>\r\n  <img class=\"modal-content\" id=\"img01\">\r\n  <div id=\"caption\"></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {ModalConfirmComponent} from \"../modal-confirm/modal-confirm.component\";\r\n\r\n@Component({\r\n  selector: 'app-verify',\r\n  templateUrl: './verify.component.html',\r\n  styleUrls: ['./verify.component.css']\r\n})\r\nexport class VerifyComponent implements OnInit {\r\n  // Status\r\n  statusPending = 'pending';\r\n  statusDenied = 'denied';\r\n  statusVerified = 'verified';\r\n\r\n  public users = [{\r\n    _id: \"609877974266ec0015276907\",\r\n    ime: \"Šime\",\r\n    priimek: \"Šimasti\",\r\n    email: \"šimethešime@gmail.com\",\r\n    slikaProfila: \"../../../assets/img/person.jpg\",\r\n    slikaDokumenta: \"\",\r\n    tipRacuna: \"sprehajalec\",\r\n    datumRojstva: \"2012-12-12T00:00:00.000Z\",\r\n    status: \"pending\"\r\n  }, {\r\n    _id: \"60987eb79b10f000156ee544\",\r\n    ime: \"Zavrnjen\",\r\n    priimek: \"uporabnik\",\r\n    email: \"sađboi@gmail.com\",\r\n    slikaProfila: \"\",\r\n    slikaDokumenta: \"\",\r\n    tipRacuna: \"lastnik\",\r\n    datumRojstva: \"2012-12-12T00:00:00.000Z\",\r\n    status: \"denied\",\r\n    opis: \":(\"\r\n  }];\r\n  public buttonValues: any = [];\r\n\r\n  constructor(private modalService: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n    /*// Just another field in users\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      // merge objects into one with multiple props\r\n      this.users[i] = Object.assign(this.users[i], {\r\n        buttonValue: this.users[i].status,\r\n      });\r\n    }*/\r\n    // Saving button values\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      let data = {\r\n        userID: this.users[i]._id,\r\n        buttonValue: this.users[i].status\r\n      }\r\n      this.buttonValues.push(data);\r\n    }\r\n  }\r\n\r\n  async verify(verify: string, userID: string, event: any) {\r\n    /* https://medium.com/code-divoire/ng-bootstrap-modalservice-and-expressionchangedafterithasbeencheckederror-7b21cbf6c74a */\r\n    event.target.blur(); // needed because of ExpressionChangedAfterItHasBeenCheckedError (opening modal from form)\r\n\r\n      if(verify === 'yes') {\r\n        this.openModal('yes', userID);\r\n      }\r\n      else if(verify === 'no') {\r\n        if(this.buttonValues.find((user: any) => user.userID === userID).buttonValue != this.statusDenied) {\r\n          this.openModal('no', userID);\r\n        }\r\n      }\r\n  }\r\n\r\n  removeItem(id: string){\r\n    this.users = this.users.filter(item => item._id !== id);\r\n    this.buttonValues = this.buttonValues.filter((item: any) => item.userID !== id);\r\n  }\r\n\r\n  updateItem(id: string, updatedStatus: string){\r\n    this.users.find(item => item._id === id).status = updatedStatus;\r\n    this.buttonValues.find((item: any) => item.userID === id).buttonValue = updatedStatus;\r\n  }\r\n\r\n  /* Show image - code source: https://www.w3schools.com/css/css3_images.asp */\r\n\r\n  public showImage(src: string): void {\r\n    // Get the modal\r\n    var modal = document.getElementById('myModal');\r\n\r\n    // Get the image and insert it inside the modal\r\n    var modalImg = document.getElementById(\"img01\") as HTMLImageElement;\r\n    modal.style.display = \"block\";\r\n    modalImg.src = src;\r\n  }\r\n\r\n  public closeImageModal() {\r\n    // Get the modal\r\n    var modal = document.getElementById('myModal');\r\n    // When the user clicks on <span> (x), close the modal\r\n    modal.style.display = \"none\";\r\n  }\r\n\r\n  /* Confirmation modal */\r\n\r\n  openModal(mode: string, userID: string) {\r\n    const modalRef = this.modalService.open(ModalConfirmComponent);\r\n\r\n    let data;\r\n\r\n    let user = this.users.find(user => user._id === userID);\r\n    let userButtonvalue = this.buttonValues.find((user: any) => user.userID === userID);\r\n\r\n    if(mode === 'yes') {\r\n      data = {\r\n        title: 'Confirm verification',\r\n        action: ' verify the user',\r\n        extraInfo: ` ${user.ime} ${user.priimek}`,\r\n        permanent: true,\r\n        buttonName: 'Verify',\r\n        form: false\r\n      };\r\n    }\r\n    else if(mode === 'no') {\r\n      data = {\r\n        title: 'Reject user',\r\n        action: ' reject the user',\r\n        extraInfo: ` ${user.ime} ${user.priimek}`,\r\n        permanent: false,\r\n        buttonName: 'Reject',\r\n        form: true\r\n      };\r\n    }\r\n\r\n    modalRef.componentInstance.fromParent = data;\r\n\r\n    modalRef.result\r\n        .then((result) => {\r\n          if(result === 'Verify') {\r\n            // TODO: send request to verify\r\n            this.removeItem(userID); // TODO: remove from client side after successfully verifying\r\n            // TODO: send message to the user\r\n          }\r\n          else {\r\n            // TODO: send request to deny user\r\n            this.updateItem(userID, this.statusDenied)// TODO: update info after success\r\n            // TODO: send message to the user\r\n            if(result === '') {\r\n              console.log(\"No reason was provided.\");\r\n            }\r\n          }\r\n        })\r\n        .catch(error => {\r\n          // Cancel, X, dismiss\r\n          // Reset radio buttons\r\n          userButtonvalue.buttonValue = user.status;\r\n        });\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DogApiResult } from 'src/app/classes/dog-api-result';\r\nimport { DogService } from 'src/app/services/dog.service';\r\n\r\n@Component({\r\n  selector: 'app-add-dog',\r\n  templateUrl: './add-dog.component.html',\r\n  styleUrls: ['./add-dog.component.css']\r\n})\r\nexport class AddDogComponent implements OnInit {\r\n\r\n  public dogForm: FormGroup = new FormGroup({\r\n    name: new FormControl(undefined, [Validators.required]),\r\n    breed: new FormControl(undefined, [Validators.required]),\r\n    description: new FormControl(undefined, [Validators.required]),\r\n    picture: new FormControl(undefined, [Validators.required]),\r\n  });\r\n  breeds: Array<DogApiResult> = [];\r\n  selectedBreed: any;\r\n\r\n  constructor(private dogService: DogService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dogService.getAllBreeds().then((result) => {\r\n      this.breeds = result;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.dogForm)\r\n    this.router.navigate(['profile'])\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"add-dog-container\">\r\n    <h1 class=\"center\">Add dog</h1>\r\n    <form [formGroup]=\"dogForm\" (ngSubmit)=\"onSubmit()\">\r\n      <label>Name:</label>\r\n      <input class=\"input-element\" formControlName=\"name\" type=\"text\" id=\"name\" name=\"name\" placeholder=\"Name\">\r\n      <br>\r\n      <label>Breed:</label>\r\n      <select class=\"input-element\" formControlName=\"breed\" id=\"breed\" name=\"breed\" placeholder=\"Breed\">\r\n          <option *ngFor=\"let breed of breeds\" value=\"{{ breed.name }}\">{{ breed.name }}</option>\r\n      </select>\r\n      <br>\r\n      <label>Description:</label>\r\n      <textarea class=\"input-element\" formControlName=\"description\" name=\"description\" rows=\"10\" cols=\"30\" placeholder=\"Description\"></textarea>\r\n      <br>\r\n      <label>Image: </label>\r\n      <input class=\"input-element\" formControlName=\"picture\" type=\"file\" name=\"picture\">\r\n      <br>\r\n      <button type=\"submit\" class=\"button-color-accent\">Add dog</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { MessagesComponent } from './components/messages/messages.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { VerifyComponent } from './components/verify/verify.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AddDogComponent } from './components/add-dog/add-dog.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent\r\n  },\r\n  {\r\n    path: 'admin',\r\n    component: DashboardComponent\r\n  },\r\n  {\r\n    path: 'messages',\r\n    component: MessagesComponent\r\n  },\r\n  {\r\n    path: 'verify',\r\n    component: VerifyComponent\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'add_dog',\r\n    component: AddDogComponent\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Uporabnik } from '../classes/uporabnik';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UporabnikiService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  uporabnikiApi: string = \"http://localhost:3000/api/uporabniki/\";\r\n\r\n  getAllUsers() {\r\n      return this.http.get(this.uporabnikiApi).toPromise().then(result => result as Array<Uporabnik>)\r\n  }\r\n\r\n  getUser(id: string) {\r\n    return this.http.get(this.uporabnikiApi + id).toPromise().then(result => result as Uporabnik)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}","<p>messages works!</p>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}