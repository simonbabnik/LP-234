{"version":3,"sources":["./src/app/services/dog.service.ts","./src/app/classes/shramba.ts","./src/app/services/authorization.service.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/classes/pes.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/pipes/stars.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/components/modal-confirm/modal-confirm.component.ts","./src/app/components/modal-confirm/modal-confirm.component.html","./src/app/components/verify/verify.component.ts","./src/app/components/verify/verify.component.html","./src/app/components/add-dog/add-dog.component.ts","./src/app/components/add-dog/add-dog.component.html","./src/app/app-routing.module.ts","./src/app/services/uporabniki.service.ts","./src/app/components/messages/messages.component.ts","./src/app/components/messages/messages.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { DogApiResult } from '../classes/dog-api-result';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DogService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  dogApi: string = \"https://api.thedogapi.com/v1/breeds/\";\r\n  dogApiKey: string = \"1f9c183c-4503-4b3f-8d0f-785695091ea1\";\r\n\r\n  getBreedInfo(breed: string) {\r\n    return this.http\r\n    .get(this.dogApi + \"search?q=\" + breed, {\r\n      headers: new HttpHeaders({\r\n        'x-api-key': '${this.dogApiKey}'\r\n      })\r\n    })\r\n    .toPromise()\r\n    .then(result => result as Array<DogApiResult>)\r\n  }\r\n\r\n  getAllBreeds() {\r\n    return this.http\r\n    .get(this.dogApi)\r\n    .toPromise()\r\n    .then(result => result as Array<DogApiResult>)\r\n  }\r\n\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const SHRAMBA_BRSKALNIKA = new InjectionToken<Storage>(\r\n  'Shramba brskalnika',\r\n  {\r\n    providedIn: 'root',\r\n    factory: () => localStorage\r\n  }\r\n);\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthApiResult } from '../classes/auth-api-result';\r\nimport { SHRAMBA_BRSKALNIKA } from '../classes/shramba';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorizationService {\r\n\r\n  private apiUrl = environment.apiUrl;\r\n\r\n  constructor(\r\n    private readonly http: HttpClient,\r\n    @Inject(SHRAMBA_BRSKALNIKA) private shramba: Storage\r\n  ) { }\r\n\r\n  private b64Utf8(niz: string): string {\r\n    return decodeURIComponent(\r\n      Array.prototype.map\r\n        .call(\r\n          atob(niz),\r\n          (znak: string) => {\r\n            return '%' + ('00' + znak.charCodeAt(0).toString(16)).slice(-2);\r\n          }\r\n        )\r\n        .join('')\r\n    );\r\n  }\r\n\r\n  public jePrijavljen(): boolean {\r\n    const token: string = this.getToken();\r\n    if (token) {\r\n      const koristnaVsebina = JSON.parse(this.b64Utf8(token.split('.')[1]));\r\n      return koristnaVsebina.exp > (Date.now() / 1000);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private authentication(urlAddress: string, data: any): Promise<AuthApiResult> {\r\n    const url = `${this.apiUrl}/${urlAddress}`;\r\n    return this.http\r\n      .post(url, data)\r\n      .toPromise()\r\n      .then(rezultat => rezultat as AuthApiResult)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  public getId(): string {\r\n    const token: string = this.getToken();\r\n    if (token) {\r\n      return  JSON.parse(this.b64Utf8(token.split('.')[1]));\r\n    } else {\r\n      return \"false\";\r\n    }\r\n  }\r\n\r\n  public getToken(): string {\r\n    return this.shramba.getItem('dog-walkers-token') as string;\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    this.shramba.setItem('dog-walkers-token', token);\r\n  }\r\n\r\n  public login(email: string, password: string): Promise<any> {\r\n    console.log('In login:)');\r\n\r\n    return this.authentication('prijava', {email: email, geslo: password})\r\n      .then((authResult: any) => {\r\n        console.log(authResult);\r\n        this.saveToken(authResult['žeton']);\r\n    });\r\n  }\r\n\r\n  public logout(): void {\r\n    this.shramba.removeItem('dog-walkers-token');\r\n  }\r\n\r\n  public async registration(registrationData: any): Promise<any> {\r\n    return this.authentication('registracija', registrationData)\r\n      .then((rezultatAvtentikacije: any) => {\r\n        this.saveToken(rezultatAvtentikacije[\"žeton\"]);\r\n      });\r\n  }\r\n\r\n  private handleError(napaka: any): Promise<any> {\r\n    console.error('Prišlo je do napake', napaka.error[\"sporočilo\"] || napaka.error.errmsg || napaka.message || napaka);\r\n    return Promise.reject(napaka.error[\"sporočilo\"] || napaka.error.errmsg || napaka.message || napaka);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  apiUrl: 'http://localhost:3000/api',\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Oglas } from \"../../classes/oglas\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  posts: Oglas[];\r\n  ratings: {userID: string, rating: number}[];\r\n\r\n  constructor() {\r\n    this.posts = [{\r\n      _id: '',\r\n      _id_uporabnik: '',\r\n      naziv: 'First post',\r\n      kraj: 'Ljubljana',\r\n      cena: 100,\r\n      opis: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\r\n    }, {\r\n      _id: '',\r\n      _id_uporabnik: '',\r\n      naziv: 'Second post',\r\n      kraj: 'Maribor',\r\n      cena: 10000,\r\n      opis: 'Text.',\r\n    }];\r\n    this.ratings = [{\r\n      userID: '',\r\n      rating: 3.6\r\n    },\r\n      {\r\n        userID: '',\r\n        rating: 0\r\n      }]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container col-md-6\">\r\n  <div class=\"special-center\">\r\n    <h1>Home</h1>\r\n    <button type=\"button\" class=\"btn btn-sm button-green\" title=\"Edit post\"><img class=\"icon\" src=\"../../../assets/img/plus.jpg\" alt=\"add post\"> Add post</button>\r\n  </div>\r\n\r\n  <!-- Sorting -->\r\n  <div class=\"text-h5 mb-3\">Sorting options</div>\r\n  <div class=\"list-group\">\r\n    <button type=\"button\" class=\"list-group-item list-group-item-action\" aria-current=\"true\">\r\n      Sort by best-rated dog walkers\r\n    </button>\r\n    <div class=\"list-group-item \">\r\n      <div class=\"row justify-content-between align-items-center\">\r\n        <div class=\"col d-flex\">Filter by location:</div>\r\n        <div class=\"col\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Location\" aria-label=\"Location\" aria-describedby=\"location\">\r\n        </div>\r\n        <div class=\"d-flex col justify-content-end\">\r\n          <button type=\"button\" class=\"btn btn-sm button-color-accent\">Apply</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <hr class=\"m-5\">\r\n\r\n  <!-- Posts -->\r\n  <div class=\"card mb-3\" *ngFor=\"let post of posts; let i = index\">\r\n    <h5 class=\"card-header d-flex justify-content-between align-items-center\">\r\n      <!-- Stars -->\r\n      <div [innerHtml] = \"ratings[i].rating | stars\"></div>\r\n\r\n      <div>\r\n        <button type=\"button\" class=\"btn btn-sm btn-warning\" title=\"Edit post\"><img class=\"icon\" src=\"../../../assets/img/edit.png\" alt=\"edit post\"></button>\r\n        <button type=\"button\" class=\"btn btn-sm btn-danger m-left\" title=\"Delete post\"><img class=\"icon\" src=\"../../../assets/img/delete.png\" alt=\"delete post\"></button>\r\n      </div>\r\n    </h5>\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id=\"location\">Location</span>\r\n            </div>\r\n            <p class=\"form-control\">{{post.kraj}}</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\" id=\"price\">Price (€)</span>\r\n            </div>\r\n            <p class=\"form-control\">{{post.cena}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h5 class=\"card-title\">{{post.naziv}}</h5>\r\n      <p class=\"card-text\">{{(post.opis.length>300)? (post.opis | slice:0:300)+'...':(post.opis)}}</p>\r\n      <a href=\"#\" class=\"btn btn-sm button-color-accent\">More</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Uporabnik } from '../../classes/uporabnik';\r\nimport { Pes } from '../../classes/pes';\r\nimport { DogService } from '../../services/dog.service';\r\nimport { DogApiResult } from 'src/app/classes/dog-api-result';\r\nimport { AuthorizationService } from 'src/app/services/authorization.service';\r\nimport { Router } from '@angular/router';\r\nimport { UporabnikiService } from 'src/app/services/uporabniki.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  id: string;\r\n  uporabnik: Uporabnik;\r\n  showAddDog: boolean = false;\r\n  breedData = {};\r\n  usefulInfo: Array<DogApiResult> = [{\r\n    bred_for: \"Fetching data...\",\r\n    breed_group: \"Fetching data...\",\r\n    height: {\r\n      imperial: \"Fetching data...\",\r\n      metric: \"Fetching data...\"\r\n    },\r\n    _id: -1,\r\n    life_span: \"Fetching data...\",\r\n    name: \"Fetching data...\",\r\n    reference_image_id: \"Fetching data...\",\r\n    temperament: \"Fetching data...\",\r\n    weight: {\r\n      imperial: \"Fetching data...\",\r\n      metric: \"Fetching data...\"\r\n    }\r\n  }];\r\n\r\n  newDog: Pes = new Pes();\r\n\r\n  constructor(private dogService: DogService,\r\n              private authorizationService: AuthorizationService,\r\n              private router: Router,\r\n              private uporabnikService: UporabnikiService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n      if(!this.authorizationService.jePrijavljen()) {\r\n        this.router.navigate(['login']);\r\n      }\r\n      this.id = this.authorizationService.getId()[\"_id\"];\r\n      this.uporabnikService.getUser(this.id).then((result) => {\r\n        this.uporabnik = result;\r\n      });\r\n  }\r\n\r\n  startEdit() {\r\n    console.log(\"start editing\")\r\n  }\r\n\r\n  breedInfo(breed: string) {\r\n    this.usefulInfo = [{\r\n      bred_for: \"Fetching data...\",\r\n      breed_group: \"Fetching data...\",\r\n      height: {\r\n        imperial: \"Fetching data...\",\r\n        metric: \"Fetching data...\"\r\n      },\r\n      _id: -1,\r\n      life_span: \"Fetching data...\",\r\n      name: \"Fetching data...\",\r\n      reference_image_id: \"Fetching data...\",\r\n      temperament: \"Fetching data...\",\r\n      weight: {\r\n        imperial: \"Fetching data...\",\r\n        metric: \"Fetching data...\"\r\n      }\r\n    }];\r\n    this.breedData = this.dogService.getBreedInfo(breed).then((result) => {\r\n      this.usefulInfo = result;\r\n    });\r\n    var popup = document.getElementById(\"myPopup\");\r\n    popup?.classList.toggle(\"show\");\r\n  }\r\n\r\n  toggleAddDog() {\r\n   document.getElementById(\"dogForm\")?.classList.add(\"visible\");\r\n  }\r\n}\r\n","<div class=\"profile-container\" *ngIf=\"uporabnik\">\r\n  <img src=\"../../../assets/img/person.jpg\" alt=\"Slika profila\" class=\"image-container\">\r\n  <p class=\"profile-type\"><b>{{ uporabnik.tipRacuna }}</b></p>\r\n  <hr>\r\n  <div class=\"edit-icon-container\" (click)=\"startEdit()\"  id=\"edit_profil\">\r\n    <img class=\"edit-icon\" src=\"../../../assets/img/edit.png\" alt=\"edit profil\" >\r\n  </div>\r\n  <br>\r\n  <p class=\"profile-info\"><b>Name:</b> {{ uporabnik.ime }} </p>\r\n  <p class=\"profile-info\"><b>Surname:</b> {{ uporabnik.priimek }} </p>\r\n  <p class=\"profile-info\"><b>Birth date:</b> {{ uporabnik.datumRojstva | date }} </p>\r\n  <p class=\"profile-info\"><b>Description:</b></p>\r\n  <div class=\"profile-description\">\r\n    {{ uporabnik.opis }}\r\n  </div>\r\n  <hr>\r\n  <div class=\"edit-icon-container\" style=\"margin-bottom: 10px; height: 24px;\" (click)=\"startEdit()\" id=\"edit_dog\">\r\n    <img class=\"edit-icon\" src=\"../../../assets/img/edit.png\" alt=\"edit dog\" >\r\n  </div>\r\n<!--   <div *ngFor=\"let pes of uporabnik.psi\" class=\"dog-card\">\r\n    <div class=\"container\">\r\n      <div class=\"images\">\r\n        <img src=\"../../../assets/img/{{ pes.slika }}\" />\r\n      </div>\r\n      <div class=\"data\">\r\n        <p class=\"profile-info\"><b>Name:</b> {{ pes.ime }} </p>\r\n        <p class=\"profile-info popup\"><b>Breed: </b> <i class=\"dotted\" (click)=\"breedInfo(pes.pasma)\">{{ pes.pasma }}</i>\r\n          <span class=\"popuptext\" id=\"myPopup\">\r\n            <p *ngIf=\"usefulInfo[0].name\"><b>Name:</b> {{usefulInfo[0].name}}</p>\r\n            <p *ngIf=\"usefulInfo[0].bred_for\"><b>Bred for:</b> {{usefulInfo[0].bred_for}}</p>\r\n            <p *ngIf=\"usefulInfo[0].temperament\"><b>Temperament:</b> {{usefulInfo[0].temperament}}</p>\r\n            <p *ngIf=\"usefulInfo[0].life_span\"><b>Lifespan:</b> {{usefulInfo[0].life_span}}</p>\r\n            <p *ngIf=\"usefulInfo[0].weight.metric\"><b>Weight:</b> {{ usefulInfo[0].weight.metric }} kg</p>\r\n            <p *ngIf=\"usefulInfo[0].height.metric\"><b>Height:</b> {{ usefulInfo[0].height.metric }} cm</p>\r\n          </span>\r\n        </p>\r\n        <p class=\"profile-info\"><b>Description:</b></p>\r\n        <div class=\"dog-description\">\r\n          {{ pes.opis }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div style=\"height: 20px;\"></div>\r\n  </div> -->\r\n  <div routerLink=\"/add_dog\" class=\"container\" (click)=\"toggleAddDog()\" id=\"add_dog\">\r\n    <img src=\"../../../assets/img/plus.jpg\" class=\"plus\">\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Ocena } from \"./ocena\";\r\n\r\nexport class Pes {\r\n  _id: string = \"\";\r\n  opis: string = \"\";\r\n  slika: string = \"\";\r\n  ime: string = \"\";\r\n  pasma: string = \"\";\r\n  ocene: Array<Ocena> = [];\r\n  povprecnaOcena: number = 0;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Uporabnik } from 'src/app/classes/uporabnik';\r\nimport { UporabnikiService } from 'src/app/services/uporabniki.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  users: Array<Uporabnik> = [];\r\n\r\n\r\n  constructor(private uporabnikiService: UporabnikiService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.uporabnikiService.getAllUsers().then((result) => {\r\n      this.users = result[\"uporabniki\"];\r\n    }\r\n    )\r\n  }\r\n\r\n  startEdit() {\r\n  }\r\n\r\n  deleteUser() {\r\n\r\n  }\r\n\r\n}\r\n","<h1 (click)=\"startEdit()\">Admin dashboard</h1>\r\n\r\n<div class=\"container\" *ngFor=\"let user of users\">\r\n  <div class=\"edit-delete\">\r\n    <img class=\"edit-icon\" src=\"../../../assets/img/edit.png\" alt=\"edit profil\" (click)=\"startEdit()\">\r\n    <img class=\"edit-icon\" src=\"../../../assets/img/delete.png\" alt=\"edit profil\" (click)=\"deleteUser()\">\r\n  </div>\r\n  <hr>\r\n  <div class=\"data-fields\">\r\n    <!-- <img src=\"../../../assets/img/{{ user.slikaProfila }}\" class=\"profile-image\"> -->\r\n    <div class=\"user-data\">\r\n      <h2 style=\"text-align: center; font-size: 34px;\">{{ user.ime }} {{ user.priimek }}</h2>\r\n      <p class=\"h1\" style=\"font-size: 24px;\">{{ user.datumRojstva | date}}</p>\r\n      <p class=\"h1\" style=\"font-size: 24px;\"><b>Description:</b></p>\r\n      <div class=\"profile-description\">\r\n        {{ user.opis }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'stars'\r\n})\r\nexport class StarsPipe implements PipeTransform {\r\n\r\n  transform(ocena: number): string {\r\n    let zvezdice = '';\r\n    for (let i = 1; i <= 5; i++)\r\n      zvezdice += '<i class=\"fa' + (ocena >= i ? 's' : 'r') + ' fa-star\"></i>';\r\n    return zvezdice;\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'dog-walkers';\r\n}","<app-toolbar></app-toolbar>\r\n\r\n<router-outlet></router-outlet>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthorizationService } from '../../services/authorization.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  alert = {\r\n    hidden: true,\r\n    type: 'danger',\r\n    message: 'Something went wrong!'\r\n  };\r\n\r\n  public loginForm: FormGroup = new FormGroup({\r\n    email: new FormControl(undefined, [Validators.required, Validators.email]),\r\n    password: new FormControl(undefined, [Validators.required]),\r\n  });\r\n\r\n  constructor(\r\n    private readonly authService: AuthorizationService,\r\n    private readonly router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.loginForm.valid) {\r\n      // Null checks\r\n      const email = this.loginForm.get('email')?.value;\r\n      const pass = this.loginForm.get('password')?.value;\r\n      if (email !== undefined && pass !== undefined) {\r\n        this.authService.login(\r\n          this.loginForm.get('email')?.value,\r\n          this.loginForm.get('password')?.value)\r\n          .then(() => {\r\n            this.router.navigate(['/profile']);\r\n          })\r\n          .catch(sporocilo => this.handleError(sporocilo));\r\n      }\r\n    }\r\n    else {\r\n      console.log('Login data are not valid.');\r\n    }\r\n  }\r\n\r\n  private readonly handleError = (error: any) => {\r\n    console.log(error);\r\n    this.showAlert(error);\r\n  }\r\n\r\n  /* Alerts */\r\n\r\n  // Set and show alert\r\n  showAlert(message: string): void {\r\n    this.alert.message = message;\r\n    this.alert.hidden = false;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <!--Login-->\r\n  <div class=\"login-container mt-5 mb-5\">\r\n\r\n    <!--Alert-->\r\n    <div class=\"row justify-content-center mt-3\">\r\n      <ngb-alert *ngIf=\"!alert.hidden\" [type]=\"alert.type\" (closed)=\"alert.hidden = true\" class=\"w-75\">{{ alert.message }}</ngb-alert>\r\n    </div>\r\n\r\n    <h1 class=\"mt-3 m-bottom-5 \">Login</h1>\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n      <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" formControlName=\"email\" required>\r\n      <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" formControlName=\"password\" required>\r\n      <button type=\"submit\" class=\"button-color-accent m-top-5\" [disabled]=\"!loginForm.valid\">Login</button>\r\n      <p>OR</p>\r\n      <button class=\"button-color-accent m-bottom-5\" routerLink=\"/register\">Register</button>\r\n    </form>\r\n  </div>\r\n\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthorizationService } from '../../services/authorization.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  alert = {\r\n    hidden: true,\r\n    type: 'danger',\r\n    message: 'Nekaj je šlo narobe :('\r\n  };\r\n\r\n  public registerForm: FormGroup = new FormGroup({\r\n    firstName: new FormControl(undefined, [Validators.required]),\r\n    surname: new FormControl(undefined, [Validators.required]),\r\n    email: new FormControl(undefined, [Validators.required, Validators.email]),\r\n    password: new FormControl(undefined, [Validators.required]),\r\n    passwordConfirm: new FormControl(undefined, [Validators.required]),\r\n    birthday: new FormControl(undefined, [Validators.required]),\r\n    documentID: new FormControl(undefined, [Validators.required]),\r\n    profilePicture: new FormControl(undefined),\r\n    role: new FormControl(undefined)\r\n  });\r\n\r\n  constructor(\r\n    private readonly authService: AuthorizationService,\r\n    private readonly router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  passwordMatch(pass1: string, pass2: string): boolean {\r\n    if (pass1 && pass2 && pass1 === pass2) { return true; }\r\n    else { return false; }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    // tslint:disable-next-line:max-line-length\r\n    if (this.registerForm.valid) {\r\n      if (this.passwordMatch(this.registerForm.get('password')?.value, this.registerForm.get('passwordConfirm')?.value)) {\r\n        console.log('valid registration form');\r\n        // Role\r\n        let role = 'lastnik';\r\n        if (this.registerForm.get('role')?.value === true) {\r\n          role = 'sprehajalec';\r\n        }\r\n        const registerData = {\r\n          ime: this.registerForm.get('firstName')?.value,\r\n          priimek: this.registerForm.get('surname')?.value,\r\n          email: this.registerForm.get('email')?.value,\r\n          geslo: this.registerForm.get('password')?.value,\r\n          datumRojstva: this.registerForm.get('birthday')?.value,\r\n          slika_dokumenta: this.registerForm.get('documentID')?.value,\r\n          slika_profila: this.registerForm.get('profilePicture')?.value,\r\n          tip_racuna: role\r\n        };\r\n        this.authService.registration(registerData)\r\n          .then(() => {\r\n            this.router.navigate(['/profile']);\r\n          })\r\n          .catch(sporocilo => this.handleError(sporocilo));\r\n      }\r\n      else {\r\n        this.showAlert('Vneseni gesli se ne ujemata.');\r\n      }\r\n    }\r\n\r\n    /*// preveri geslo\r\n    const form = new FormData();\r\n    form.append('ime', this.registerForm.get('firstName').value);\r\n    form.append('priimek', this.registerForm.get('surname').value);\r\n    form.append('email', this.registerForm.get('email').value);\r\n    form.append('geslo', this.registerForm.get('password').value);\r\n    form.append('birthday', this.registerForm.get('birthday').value); // spremeni\r\n    form.append('slika_dokumenta', this.registerForm.get('documentID').value);\r\n    form.append('slika_profila', this.registerForm.get('profilePicture').value);\r\n    form.append('tip_racuna', this.registerForm.get('role').value);\r\n    console.log(form);*/\r\n  }\r\n\r\n  private readonly handleError = (error: any) => {\r\n    console.log(error);\r\n    this.showAlert(error);\r\n  }\r\n\r\n  /* Alerts */\r\n\r\n  // Set and show alert\r\n  showAlert(message: string): void {\r\n    this.alert.message = message;\r\n    this.alert.hidden = false;\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n\r\n  <!--Register form-->\r\n  <div class=\"register-container mt-5 mb-5\">\r\n\r\n    <!--Alert-->\r\n    <div class=\"row justify-content-center mt-3\">\r\n      <ngb-alert *ngIf=\"!alert.hidden\" [type]=\"alert.type\" (closed)=\"alert.hidden = true\" class=\"w-75\">{{ alert.message }}</ngb-alert>\r\n    </div>\r\n\r\n    <h1 class=\"mt-3 m-bottom-5\">Register</h1>\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n      <input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First name\" formControlName=\"firstName\">\r\n      <input type=\"text\" id=\"surname\" name=\"surname\" placeholder=\"Last name\" formControlName=\"surname\">\r\n      <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n      <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n      <input type=\"password\" id=\"password_confirm\" name=\"password_confirm\" placeholder=\"Confirm password\" formControlName=\"passwordConfirm\">\r\n      <div class=\"input-inline\">\r\n        <label for=\"birthday\">Date of birth</label>\r\n        <input type=\"date\" id=\"birthday\" name=\"birthday\" class=\"field-inline\" formControlName=\"birthday\">\r\n      </div>\r\n      <div class=\"input-inline\">\r\n        <label for=\"documentID\">Upload ID</label>\r\n        <input type=\"file\" id=\"documentID\" name=\"documentID\" class=\"field-inline\" formControlName=\"documentID\">\r\n      </div>\r\n      <div class=\"input-inline\">\r\n        <label for=\"profile\">Upload profile picture</label>\r\n        <input type=\"file\" id=\"profile\" name=\"profile_picture\" class=\"field-inline\" formControlName=\"profilePicture\">\r\n      </div>\r\n      <div class=\"input-inline-left\">\r\n        <input type=\"checkbox\" id=\"is_dog_walker\" name=\"is_dog_walker\" formControlName=\"role\">\r\n        <label for=\"is_dog_walker\">I am a dog walker.</label>\r\n      </div>\r\n      <button type=\"submit\" class=\"button-color-accent m-top-5 m-bottom-5\" [disabled]=\"!registerForm.valid\">Register</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { MessagesComponent } from './components/messages/messages.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { VerifyComponent } from './components/verify/verify.component';\r\nimport { StarsPipe } from './pipes/stars.pipe';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { AddDogComponent } from './components/add-dog/add-dog.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ModalConfirmComponent } from './components/modal-confirm/modal-confirm.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ToolbarComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    MessagesComponent,\r\n    DashboardComponent,\r\n    VerifyComponent,\r\n    StarsPipe,\r\n    LoginComponent,\r\n    AddDogComponent,\r\n    RegisterComponent,\r\n    ModalConfirmComponent,\r\n  ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        HttpClientModule,\r\n        ReactiveFormsModule,\r\n        NgbModule,\r\n        FormsModule,\r\n    ],\r\n  providers: [\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AuthorizationService } from 'src/app/services/authorization.service';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n  constructor(private authorizationService: AuthorizationService) { }\r\n\r\n  jeAdmin: boolean = true;\r\n  jeVerifier: boolean = false;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logout() {\r\n    this.authorizationService.logout();\r\n  }\r\n\r\n}\r\n","<div class=\"toolbar-main-div\">\r\n  <a routerLink=\"\">\r\n    Home\r\n  </a>\r\n  <a routerLink=\"profile\">\r\n    Profile\r\n  </a>\r\n  <a routerLink=\"messages\">\r\n    Messages\r\n  </a>\r\n  <a *ngIf=\"jeAdmin\" routerLink=\"admin\">\r\n    Dashboard\r\n  </a>\r\n  <a *ngIf=\"jeAdmin || jeVerifier\" routerLink=\"verify\">\r\n    Verify\r\n  </a>\r\n  <a routerLink=\"/\" class=\"logout\" (click)=\"logout()\">\r\n    Logout\r\n  </a>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Component({\r\n  selector: 'app-modal-confirm',\r\n  templateUrl: './modal-confirm.component.html',\r\n  styleUrls: ['./modal-confirm.component.css']\r\n})\r\nexport class ModalConfirmComponent implements OnInit {\r\n\r\n  @Input() fromParent: any;\r\n\r\n  constructor(public modal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  passBack() {\r\n    if(this.fromParent.form) {\r\n      let input = document.getElementById('textArea') as HTMLTextAreaElement;\r\n      this.modal.close(input?.value);\r\n    }\r\n    else {\r\n      this.modal.close(this.fromParent.buttonName);\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title \" id=\"modal-title\">{{fromParent.title}}</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss()\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <p><strong>Are you sure you want to{{fromParent.action}}<span class=\"text-warning\">{{fromParent.extraInfo}}</span>?</strong></p>\r\n  <p *ngIf=\"fromParent.permanent\" class=\"text-danger\">This operation can not be undone.</p>\r\n  <div *ngIf=\"fromParent.form\" class=\"form-group\">\r\n    <label for=\"textArea\">Please provide the reason.</label>\r\n    <textarea class=\"form-control\" id=\"textArea\" rows=\"3\"></textarea>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('Cancel')\">Cancel</button>\r\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"passBack()\">{{fromParent.buttonName}}</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\r\nimport {ModalDismissReasons, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {ModalConfirmComponent} from \"../modal-confirm/modal-confirm.component\";\r\n\r\n@Component({\r\n  selector: 'app-verify',\r\n  templateUrl: './verify.component.html',\r\n  styleUrls: ['./verify.component.css']\r\n})\r\nexport class VerifyComponent implements OnInit {\r\n  // Status\r\n  statusPending = 'pending';\r\n  statusDenied = 'denied';\r\n  statusVerified = 'verified';\r\n\r\n  public users = [{\r\n    _id: \"609877974266ec0015276907\",\r\n    ime: \"Šime\",\r\n    priimek: \"Šimasti\",\r\n    email: \"šimethešime@gmail.com\",\r\n    slikaProfila: \"../../../assets/img/person.jpg\",\r\n    slikaDokumenta: \"\",\r\n    tipRacuna: \"sprehajalec\",\r\n    datumRojstva: \"2012-12-12T00:00:00.000Z\",\r\n    status: \"pending\"\r\n  }, {\r\n    _id: \"60987eb79b10f000156ee544\",\r\n    ime: \"Zavrnjen\",\r\n    priimek: \"uporabnik\",\r\n    email: \"sađboi@gmail.com\",\r\n    slikaProfila: \"\",\r\n    slikaDokumenta: \"\",\r\n    tipRacuna: \"lastnik\",\r\n    datumRojstva: \"2012-12-12T00:00:00.000Z\",\r\n    status: \"denied\",\r\n    opis: \":(\"\r\n  }];\r\n  public buttonValues: any = [];\r\n\r\n  constructor(private modalService: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n    /*// Just another field in users\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      // merge objects into one with multiple props\r\n      this.users[i] = Object.assign(this.users[i], {\r\n        buttonValue: this.users[i].status,\r\n      });\r\n    }*/\r\n    // Saving button values\r\n    for (let i = 0; i < this.users.length; i++) {\r\n      let data = {\r\n        userID: this.users[i]._id,\r\n        buttonValue: this.users[i].status\r\n      }\r\n      this.buttonValues.push(data);\r\n    }\r\n  }\r\n\r\n  async verify(verify: string, userID: string, event: any) {\r\n    /* https://medium.com/code-divoire/ng-bootstrap-modalservice-and-expressionchangedafterithasbeencheckederror-7b21cbf6c74a */\r\n    event.target.blur(); // needed because of ExpressionChangedAfterItHasBeenCheckedError (opening modal from form)\r\n\r\n      if(verify === 'yes') {\r\n        this.openModal('yes', userID);\r\n      }\r\n      else if(verify === 'no') {\r\n        if(this.buttonValues.find((user: any) => user.userID === userID).buttonValue != this.statusDenied) {\r\n          this.openModal('no', userID);\r\n        }\r\n      }\r\n  }\r\n\r\n  removeItem(id: string){\r\n    this.users = this.users.filter(item => item._id !== id);\r\n    this.buttonValues = this.buttonValues.filter((item: any) => item.userID !== id);\r\n  }\r\n\r\n  updateItem(id: string, updatedStatus: string){\r\n    this.users.find(item => item._id === id).status = updatedStatus;\r\n    this.buttonValues.find((item: any) => item.userID === id).buttonValue = updatedStatus;\r\n  }\r\n\r\n  /* Show image - code source: https://www.w3schools.com/css/css3_images.asp */\r\n\r\n  public showImage(src: string): void {\r\n    // Get the modal\r\n    var modal = document.getElementById('myModal');\r\n\r\n    // Get the image and insert it inside the modal\r\n    var modalImg = document.getElementById(\"img01\") as HTMLImageElement;\r\n    modal.style.display = \"block\";\r\n    modalImg.src = src;\r\n  }\r\n\r\n  public closeImageModal() {\r\n    // Get the modal\r\n    var modal = document.getElementById('myModal');\r\n    // When the user clicks on <span> (x), close the modal\r\n    modal.style.display = \"none\";\r\n  }\r\n\r\n  /* Confirmation modal */\r\n\r\n  openModal(mode: string, userID: string) {\r\n    const modalRef = this.modalService.open(ModalConfirmComponent);\r\n\r\n    let data;\r\n\r\n    let user = this.users.find(user => user._id === userID);\r\n    let userButtonvalue = this.buttonValues.find((user: any) => user.userID === userID);\r\n\r\n    if(mode === 'yes') {\r\n      data = {\r\n        title: 'Confirm verification',\r\n        action: ' verify the user',\r\n        extraInfo: ` ${user.ime} ${user.priimek}`,\r\n        permanent: true,\r\n        buttonName: 'Verify',\r\n        form: false\r\n      };\r\n    }\r\n    else if(mode === 'no') {\r\n      data = {\r\n        title: 'Reject user',\r\n        action: ' reject the user',\r\n        extraInfo: ` ${user.ime} ${user.priimek}`,\r\n        permanent: false,\r\n        buttonName: 'Reject',\r\n        form: true\r\n      };\r\n    }\r\n\r\n    modalRef.componentInstance.fromParent = data;\r\n\r\n    modalRef.result\r\n        .then((result) => {\r\n          if(result === 'Verify') {\r\n            // TODO: send request to verify\r\n            this.removeItem(userID); // TODO: remove from client side after successfully verifying\r\n            // TODO: send message to the user\r\n          }\r\n          else {\r\n            // TODO: send request to deny user\r\n            this.updateItem(userID, this.statusDenied)// TODO: update info after success\r\n            // TODO: send message to the user\r\n            if(result === '') {\r\n              console.log(\"No reason was provided.\");\r\n            }\r\n          }\r\n        })\r\n        .catch(error => {\r\n          // Cancel, X, dismiss\r\n          // Reset radio buttons\r\n          userButtonvalue.buttonValue = user.status;\r\n        });\r\n\r\n  }\r\n\r\n}\r\n","<h1>Verification of users</h1>\r\n\r\n<div *ngFor=\"let user of users;let i = index;\" class=\"verify-container mt-5 mb-5\">\r\n\r\n  <div class=\"row\" style=\"margin-left: 0; margin-right: 0\">\r\n\r\n    <!-- Profile data -->\r\n    <div class=\"profile-data-container p-2 col-md-8\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <div id=\"profile-data-left\">\r\n            <img *ngIf=\"user.slikaProfila; else elseProfilePicture\" src=\"{{user.slikaProfila}}\" alt=\"Profile picture\" class=\"img-style\">\r\n            <ng-template #elseProfilePicture><img src=\"../../../assets/img/default/no-profile-picture.jpg\" alt=\"Profile picture\" class=\"img-style\"></ng-template>\r\n            <a routerLink=\"../profile/{{user._id}}\" target=\"_blank\">View profile</a>\r\n          </div>\r\n        </div>\r\n        <div class=\"col\">\r\n          <div id=\"profile-data-right\" class=\"ml-2\">\r\n            <h2>{{user.ime}} {{user.priimek}}</h2>\r\n            <hr>\r\n            <p class=\"section-text\">Date of birth: </p>\r\n            <p>{{user.datumRojstva | date}}</p>\r\n            <p class=\"section-text\">Role:</p>\r\n            <p>{{user.tipRacuna}}</p>\r\n            <p class=\"section-text\">Email:</p>\r\n            <p>{{user.email}}</p>\r\n            <p *ngIf=\"user.opis\" class=\"section-text\">Description:</p>\r\n            <p *ngIf=\"user.opis\">{{user.opis}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Verification -->\r\n    <div class=\"verify-data-container p-2 col\">\r\n      <img *ngIf=\"user.slikaDokumenta; else elseDocument\" class=\"img-style img-doc\" src=\"{{user.slikaDokumenta}}\" alt=\"Document\" (click)=\"showImage(user.slikaDokumenta)\">\r\n      <ng-template #elseDocument><img class=\"img-style img-doc\" src=\"../../../assets/img/default/no-document-id-blue.png\" alt=\"Document\" (click)=\"showImage('../../../assets/img/default/no-document-id-blue.png')\"></ng-template>\r\n      <p class=\"verify-text\">Verify user</p>\r\n      <p class=\"verify-text-id\">{{user._id}}</p>\r\n      <p class=\"verify-text-id\"><b>Status:</b> {{user.status}}</p>\r\n\r\n      <!-- Buttons -->\r\n      <div class=\"d-flex justify-content-center\">\r\n\r\n        <div class=\"btn-group btn-group-toggle\" ngbRadioGroup name=\"radioBasic\" [(ngModel)]=\"buttonValues[i].buttonValue\">\r\n          <label ngbButtonLabel class=\"button-verify button-yes\">\r\n            <input ngbButton type=\"radio\" value=\"{{statusVerified}}\" (click)=\"verify('yes', user._id, $event)\"> YES\r\n          </label>\r\n          <label ngbButtonLabel class=\"button-verify button-no\">\r\n            <input ngbButton type=\"radio\" value=\"{{statusDenied}}\" (click)=\"verify('no', user._id, $event)\"> NO\r\n          </label>\r\n        </div>\r\n\r\n        <hr>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n<!-- Show image -->\r\n<div id=\"myModal\" class=\"modal\">\r\n  <span class=\"close\" (click)=\"closeImageModal()\">&times;</span>\r\n  <img class=\"modal-content\" id=\"img01\">\r\n  <div id=\"caption\"></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DogApiResult } from 'src/app/classes/dog-api-result';\r\nimport { DogService } from 'src/app/services/dog.service';\r\n\r\n@Component({\r\n  selector: 'app-add-dog',\r\n  templateUrl: './add-dog.component.html',\r\n  styleUrls: ['./add-dog.component.css']\r\n})\r\nexport class AddDogComponent implements OnInit {\r\n\r\n  public dogForm: FormGroup = new FormGroup({\r\n    name: new FormControl(undefined, [Validators.required]),\r\n    breed: new FormControl(undefined, [Validators.required]),\r\n    description: new FormControl(undefined, [Validators.required]),\r\n    picture: new FormControl(undefined, [Validators.required]),\r\n  });\r\n  breeds: Array<DogApiResult> = [];\r\n  selectedBreed: any;\r\n\r\n  constructor(private dogService: DogService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dogService.getAllBreeds().then((result) => {\r\n      this.breeds = result;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.dogForm)\r\n    this.router.navigate(['profile'])\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"add-dog-container\">\r\n    <h1 class=\"center\">Add dog</h1>\r\n    <form [formGroup]=\"dogForm\" (ngSubmit)=\"onSubmit()\">\r\n      <label>Name:</label>\r\n      <input class=\"input-element\" formControlName=\"name\" type=\"text\" id=\"name\" name=\"name\" placeholder=\"Name\">\r\n      <br>\r\n      <label>Breed:</label>\r\n      <select class=\"input-element\" formControlName=\"breed\" id=\"breed\" name=\"breed\" placeholder=\"Breed\">\r\n          <option *ngFor=\"let breed of breeds\" value=\"{{ breed.name }}\">{{ breed.name }}</option>\r\n      </select>\r\n      <br>\r\n      <label>Description:</label>\r\n      <textarea class=\"input-element\" formControlName=\"description\" name=\"description\" rows=\"10\" cols=\"30\" placeholder=\"Description\"></textarea>\r\n      <br>\r\n      <label>Image: </label>\r\n      <input class=\"input-element\" formControlName=\"picture\" type=\"file\" name=\"picture\">\r\n      <br>\r\n      <button type=\"submit\" class=\"button-color-accent\">Add dog</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { MessagesComponent } from './components/messages/messages.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { VerifyComponent } from './components/verify/verify.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AddDogComponent } from './components/add-dog/add-dog.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent\r\n  },\r\n  {\r\n    path: 'admin',\r\n    component: DashboardComponent\r\n  },\r\n  {\r\n    path: 'messages',\r\n    component: MessagesComponent\r\n  },\r\n  {\r\n    path: 'verify',\r\n    component: VerifyComponent\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'add_dog',\r\n    component: AddDogComponent\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Uporabnik } from '../classes/uporabnik';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UporabnikiService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  uporabnikiApi: string = \"http://localhost:3000/api/uporabniki/\";\r\n\r\n  getAllUsers() {\r\n      return this.http.get(this.uporabnikiApi).toPromise().then(result => result as Array<Uporabnik>)\r\n  }\r\n\r\n  getUser(id: string) {\r\n    return this.http.get(this.uporabnikiApi + id).toPromise().then(result => result as Uporabnik)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}","<p>messages works!</p>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}